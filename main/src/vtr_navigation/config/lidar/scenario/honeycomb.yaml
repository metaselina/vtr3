/**:
  ros__parameters:
    ############ system configuration ############

    # The lidar frame from the urdf (also defines the rig name)
    lidar_frame: honeycomb
    # The control frame from the urdf
    robot_frame: base_link

    ############ map projection configuration ############
    map_projection:
      origin_lat: 43.78220
      origin_lng: -79.4661
      origin_theta: 1.3 # positive == clockwise
      scale: 1.0

    ############ tactic configuration ############
    tactic:
      visualize: true

    ############ pipeline configuration ############
    pipeline:
      # pipeline parameters
      map_voxel_size: 0.3

    preprocessing:
      conversion:
        type: "lidar.honeycomb_converter"
        visualize: true

      filtering:
        frame_voxel_size: 0.1 # grid subsampling voxel size

        vertical_angle_res: 0.0132645 # vertical angle resolution in radius, equal to 0.76 degree documented in the manual
        polar_r_scale: 2.0 # polar_r_scale x vertical_angle_res = nearest neighbor search radius for normal computation
        r_scale: 4.0 # scale down point range by this value after taking log, whatever works
        h_scale: 1.54 # scale down yaw(phi) by this value so that vertical resolution ~= horizontal resolution, horizontal resolution when 5Hz spin frequence is ~1.17 degree, so 1.17 / 0.76 = 1.54

        num_sample1: 10000 # max number of sample after filtering based on planarity
        min_norm_score1: 0.95 # min planarity score

        num_sample2: 10000 # max number of sample after filtering based on planarity
        min_norm_score2: 0.2 # 0.2 is when the incident angle 5/12 * pi
        min_normal_estimate_dist: 2.0 # minimum distance to estimate normal in meters
        max_normal_estimate_angle: 0.42 # must <1/2, this value will be timed by M_PI

        cluster_num_sample: 10000 # maxnumber of sample after removing isolated points

        visualize: true

    odometry:
      recall:
        type: "lidar.map_recall"
        map_voxel_size: 0.3
        visualize: true

      icp:
        trajectory_smoothing: true
        use_constant_acc: false
        lin_acc_std_dev_x: 1.0
        lin_acc_std_dev_y: 0.1
        lin_acc_std_dev_z: 0.1
        ang_acc_std_dev_x: 0.1
        ang_acc_std_dev_y: 0.1
        ang_acc_std_dev_z: 1.0

        # ICP parameters
        num_threads: 8
        initial_max_iter: 6
        initial_num_samples: 12000
        initial_max_pairing_dist: 1.5
        initial_max_planar_dist: 1.0
        refined_max_iter: 50
        refined_num_samples: 12000
        refined_max_pairing_dist: 1.0
        refined_max_planar_dist: 0.3

        min_matched_ratio: 0.5

      mapping:
        map_voxel_size: 0.3

        # dynamic objects removal
        horizontal_resolution: 0.02042
        vertical_resolution: 0.01326
        min_num_observations: 1
        max_num_observations: 5

      keyframe_test:
        min_translation: 1.0 # 2
        min_rotation: 15.0
        max_translation: 3.0 # 6
        max_rotation: 30.0 # 45

        min_matched_points_ratio: 0.6

        max_num_points: 100000

    localization:
      recall:
        single_exp_map_voxel_size: 0.3
        multi_exp_map_voxel_size: 0.3

        remove_short_term_dynamic: true
        short_term_min_num_observations: 1 # must be positive otherwise undefined behavior
        short_term_min_movability: 0.5

        depth: 4
        num_additional_exps: 5
        long_term_min_num_observations: 4

        visualize: true

      icp:
        use_pose_prior: true

        # ICP parameters
        num_threads: 8
        initial_max_iter: 10
        initial_num_samples: 12000
        initial_max_pairing_dist: 1.5
        initial_max_planar_dist: 1.0
        refined_max_iter: 50
        refined_num_samples: 12000
        refined_max_pairing_dist: 1.0
        refined_max_planar_dist: 0.3

        min_matched_ratio: 0.5
