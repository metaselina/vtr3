# The tmux session name, has to be unique
session_name: offline_vtr_stereo

# environment:
#   PRIORITIZE: nice -n -5 ionice -c 2 -n 1

# Can run a script before tmuxp starts building the session
# before_script: /my/startup/script
shell_command_before:
  - "source ${VTRVENV}/bin/activate"
  - "source ${VTRSRC}/main/install/setup.bash"

# The default start directory for the full session, ./ is this file's location
start_directory: ${VTRTEMP}

# Add commands to bash history
suppress_history: false

# This is where we list all the stuff we want to run
windows:
  - window_name: vtr_main
    layout: main-horizontal
    panes:
      - ros2 launch vtr_navigation vtr_stereo.launch.py scenario_params:=playback.yaml data_dir:=${VTRTEMP}/playback/stereo clear_data_dir:=true use_sim_time:=true
      - ros2 run vtr_mission_planning vtr_mission.py --help # backup way to send commands if UI not working
      - ros2 run vtr_sensors BumblebeeReplay ${VTRDATA}/utias_20210412 front_xb3 false 900 99999 1 1
      # - ros2 run vtr_sensors BumblebeeReplay ${VTRDATA}/utias_20210412 front_xb3 false 900 3100 1 0
      # - ros2 run vtr_sensors BumblebeeReplay ${VTRDATA}/utias_2016_inthedark/run_000003 front_xb3 true 400 1000
      - echo "backup terminal"

  - window_name: ui
    layout: main-horizontal
    panes:
      - ros2 run vtr_interface socket_server.py  --ros-args -r __ns:=/vtr
      - sleep 2 && ros2 run vtr_interface socket_client_node.py  --ros-args -r __ns:=/vtr # wait for the socket_server to be created
      - sleep 3 && ros2 run vtr_interface ui_server.py  --ros-args -r __ns:=/vtr # the UI server has to wait for socket_client_node
      - sleep 4 && firefox --new-window "localhost:5200" # the webpage has to wait for ui server

  - window_name: ros_monitor
    layout: main-horizontal
    panes:
      - ros2 launch vtr_safety_monitor safety_monitor.launch.py scenario_params:=default_playback.yaml

  - window_name: grizzly
    layout: main-horizontal
    panes:
      - ros2 launch vtr_grizzly grizzly_utias_description.launch.py

  - window_name: calibration
    layout: main-horizontal
    panes:
      - ros2 run vtr_sensors BumblebeeCalibration ${VTRDATA}/utias_20210412/ front_xb3
      # - ros2 run vtr_sensors BumblebeeDriver --ros-args --params-file ./vtr3/ros2/src/vtr_sensors/param/XB3.yaml
